version: 3.9.1.{build}
shallow_clone: true
skip_branch_with_pr: false
skip_commits:
  message: /!nobuild/
skip_tags: false

environment:
  LUAROCKS_VER: 2.4.1
  LUA_VER: 5.1.5
  LUA: lua5.3
  matrix:
  - LUA_VER: 5.1.5

platform:
  - x64

init:
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }
  
install:
  - cmd: choco install 7zip.commandline
  - call .av\set_compiler_env.bat
  - call .av\install.bat
  - cmd: luarocks install luasrcdiet
  - cmd: luarocks install checks
  - cmd: luarocks install luadocumentor
  - cmd: luarocks install luacheck

build_script:
  - cmd: lua "Moose Mission Setup\\Moose_Create.lua" "S" %APPVEYOR_REPO_COMMIT% "Moose Development\\Moose" "Moose Mission Setup" 
  - cmd: luadocumentor -f doc -d docs/Documentation -s docs/Stylesheet/stylesheet.css "Moose Development/Moose"
  - cmd: luasrcdiet --basic --opt-emptylines "Moose Mission Setup\Moose.lua"
  - cmd: git clone https://github.com/FlightControl-Master/MOOSE_MISSIONS.git missions
  - cmd: >-
      For /R missions %%M IN (*.miz) do (
        echo "Mission: %%M"
        mkdir Temp
        cd Temp
        mkdir l10n
        mkdir l10n\DEFAULT
        copy "..\Moose Mission Setup\Moose.lua" l10n\DEFAULT
        copy "%%~pM%%~nM.lua" l10n\DEFAULT\*.*
        7z -bb0 u "%%M" "l10n\DEFAULT\*.lua"
        cd ..
        rmdir /S /Q Temp
      )

test_script:
  - cmd: luacheck "Moose Development\Moose\moose.lua" "Moose Mission Setup\moose.lua"

artifacts:
  - path: 'Moose Mission Setup/Moose.lua'
    name: moose.lua
  - path: 'Moose Mission Setup/Moose_.lua'
    name: moose_.lua
  - path: 'missions\*.miz'
    name: miz

