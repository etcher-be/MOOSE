version: 3.9.1.{build}

skip_branch_with_pr: false
skip_commits:
  message: /!nobuild/
skip_tags: false

environment:
  LUAROCKS_VER: 2.4.1
  LUA_VER: 5.1.5
  LUA=lua5.3
#  matrix:
#   - LUA_VER: 5.1.5

# matrix:
#   allow_failures:
#     - configuration: 2010
#       platform: x64
#     - configuration: 2008
#       platform: x64
#     - configuration: MinGW
#       platform: x64



# Abuse this section so we can have a matrix with different Compiler versions
# Is there a better way? Like injecting an array in the matrix?
# configuration:
#  - 2015

platform:
  - x64

init:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds.
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }

  # Check that we have the expected version and architecture for Python
#  - "python --version"
#  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
#  - "pip --version"
  
  # Setup Git for push
#  - git config --global credential.helper store
#  - ps: Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:GH_TOKEN):x-oauth-basic@github.com`n"
#  - "git config --global user.email %GH_MAIL%"
#  - "git config --global user.name %APPVEYOR_ACCOUNT_NAME%"

#  - cmd: echo "%PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
#  - cmd: echo "%APPVEYOR_BUILD_WORKER_IMAGE%"
#  - cmd: echo "%APPVEYOR_REPO_COMMIT_TIMESTAMP%"
  # - cmd: echo "%APPVEYOR_REPO_COMMIT_MESSAGE%"
  # - cmd: echo "%APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED%"
  
install:
  - cmd: choco install 7zip.commandline
  - ps: Start-FileDownload 'https://luarocks.github.io/luarocks/releases/luarocks-2.4.3-win32.zip'
  - cmd: 7z x luarocks-2.4.3-win32.zip -y 
  - cmd: luarocks-2.4.3-win32\install.bat
  
  # Make compiler command line tools available
  - call .av\set_compiler_env.bat
  # Setup Lua development/build environment
  - call .av\install.bat
  # Install luasrcdiet to strip lua source code from comments etc
  - cmd: luarocks install luasrcdiet
  - cmd: luarocks install checks
  - cmd: luarocks install luadocumentor

build_script:
  # - luarocks make rockspecs/foo-scm-0.rockspec --local
  # - cmd: echo "Hello World!"
  # check the environment
  - cmd: set
  - cmd: moose_create.bat %APPVEYOR_REPO_COMMIT%
  # Update the moose documentation
  # cmd: dir "c:\lua\x64\5.1.5\LuaRocks\systree" /S
  - cmd: luadocumentor.bat -f doc -d "./docs/Documentation" -s "./docs/Stylesheet/stylesheet.css" "./Moose Development/Moose"
  - cmd: luasrcdiet.bat --basic --opt-emptylines "Moose Mission Setup"\Moose.lua
  - git clone https://github.com/FlightControl-Master/MOOSE_MISSIONS.git missions
  - cmd: Moose_update_missions.bat missions

test: off

artifacts:
  - path: 'Moose Mission Setup/Moose.lua'
    name: moose.lua
  - path: 'Moose Mission Setup/Moose_.lua'
    name: moose_.lua
  - path: '**\*.miz'
    name: miz

